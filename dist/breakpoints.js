"use strict";function Breakpoints(a){var b=this;this.windowWidth=window.innerWidth,this.keys=a||["xs","sm","md","lg","xl"],this.gridBreakpoints={},this.refresh(),this.on("refresh",function(){return b.refresh()});var c=function(){for(var a in b.windowWidth=window.innerWidth,b.gridBreakpoints){var c=b.get(a),d=b.min(a),e=b.max(a);b.isUp(a)&&b.trigger("up.".concat(a),c,d,e),b.isDown(a)&&b.trigger("down.".concat(a),c,d,e),b.isOnly(a)&&b.trigger("only.".concat(a),c,d,e)}for(var f=0;f<b.listeners.length;f++){var g=b.listeners[f],h=g.name.match(/^between\.(.{1,})-(.{1,})/i),j=!!(h&&h[1])&&h[1],k=!!(h&&h[2])&&h[2];if(j&&k&&b.isBetween(j,k)){var l=b.min(j),m=b.max(k);b.trigger(g.name,l,m)}}};window.addEventListener("load",c),window.addEventListener("resize",c)}Breakpoints.prototype.listeners=[],Breakpoints.prototype.on=function(a,b){this.listeners.push({name:a,callback:b})},Breakpoints.prototype.trigger=function(a){for(var b=arguments.length,c=Array(1<b?b-1:0),d=1;d<b;d++)c[d-1]=arguments[d];for(var e,f=0;f<this.listeners.length;f++)e=this.listeners[f],e.name===a&&e.callback.apply(e,c)},Breakpoints.prototype.refresh=function(){for(var a,b=getComputedStyle(document.documentElement),c={},d=0;d<this.keys.length;d++)a=this.keys[d],c[a]=parseInt(b.getPropertyValue("--breakpoint-".concat(a)));return this.gridBreakpoints=c,c},Breakpoints.prototype.get=function(a){return this.gridBreakpoints[a]},Breakpoints.prototype.next=function(a){var b=this.keys,c=b.indexOf(a),d=b[c+1],e=this.gridBreakpoints[d];return-1!==c&&d&&e?{key:d,value:e}:null},Breakpoints.prototype.min=function(a){var b=this.get(a);return 0===b?null:b},Breakpoints.prototype.max=function(a){var b=this.next(a),c=this.get(a);return b?this.min(b.key)-.02:null},Breakpoints.prototype.isUp=function(a){return this.windowWidth>=this.min(a)},Breakpoints.prototype.isDown=function(a){return this.windowWidth<this.min(a)},Breakpoints.prototype.isBetween=function(a,b){var c=this.min(a),d=this.max(b);if(null!==c&&null!==d)return this.windowWidth>c&&this.windowWidth<d;return null===d?this.isUp(a):!(null!==c)&&this.isDown(b)},Breakpoints.prototype.isOnly=function(a){return this.isBetween(a,a)},Breakpoints.prototype.up=function(a,b){this.on("up.".concat(a),b)},Breakpoints.prototype.down=function(a,b){this.on("down.".concat(a),b)},Breakpoints.prototype.between=function(a,b,c){this.on("between.".concat(a,"-").concat(b),c)},Breakpoints.prototype.only=function(a,b){this.on("only.".concat(a),b)};